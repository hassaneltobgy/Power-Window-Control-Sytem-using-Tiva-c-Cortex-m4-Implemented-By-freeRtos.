Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.GPIODirModeSet) refers to main.o(.text.GPIODirModeSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODirModeGet) refers to main.o(.text.GPIODirModeGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntTypeSet) refers to main.o(.text.GPIOIntTypeSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntTypeGet) refers to main.o(.text.GPIOIntTypeGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPadConfigSet) refers to main.o(.text.GPIOPadConfigSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPadConfigGet) refers to main.o(.text.GPIOPadConfigGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntEnable) refers to main.o(.text.GPIOIntEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntDisable) refers to main.o(.text.GPIOIntDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntStatus) refers to main.o(.text.GPIOIntStatus) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntClear) refers to main.o(.text.GPIOIntClear) for [Anonymous Symbol]
    main.o(.text.GPIOIntRegister) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    main.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.ARM.exidx.text.GPIOIntRegister) refers to main.o(.text.GPIOIntRegister) for [Anonymous Symbol]
    main.o(.text._GPIOIntNumberGet) refers to main.o(.rodata.g_ppui32GPIOIntMapBlizzard) for g_ppui32GPIOIntMapBlizzard
    main.o(.text._GPIOIntNumberGet) refers to main.o(.rodata.g_ppui32GPIOIntMapSnowflake) for g_ppui32GPIOIntMapSnowflake
    main.o(.ARM.exidx.text._GPIOIntNumberGet) refers to main.o(.text._GPIOIntNumberGet) for [Anonymous Symbol]
    main.o(.text.GPIOIntUnregister) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    main.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    main.o(.ARM.exidx.text.GPIOIntUnregister) refers to main.o(.text.GPIOIntUnregister) for [Anonymous Symbol]
    main.o(.text.GPIOIntRegisterPin) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    main.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.ARM.exidx.text.GPIOIntRegisterPin) refers to main.o(.text.GPIOIntRegisterPin) for [Anonymous Symbol]
    main.o(.text.GPIOIntUnregisterPin) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    main.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    main.o(.ARM.exidx.text.GPIOIntUnregisterPin) refers to main.o(.text.GPIOIntUnregisterPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinRead) refers to main.o(.text.GPIOPinRead) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinWrite) refers to main.o(.text.GPIOPinWrite) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeADC) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeADC) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeADC) refers to main.o(.text.GPIOPinTypeADC) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeCAN) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeCAN) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeCAN) refers to main.o(.text.GPIOPinTypeCAN) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeComparator) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeComparator) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeComparator) refers to main.o(.text.GPIOPinTypeComparator) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIOPinTypeComparatorOutput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIOPinTypeDIVSCLK) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEPI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEPI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEPI) refers to main.o(.text.GPIOPinTypeEPI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIOPinTypeEthernetLED) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIOPinTypeEthernetMII) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIOPinTypeGPIOInput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIOPinTypeGPIOOutput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIOPinTypeGPIOOutputOD) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIOPinTypeHibernateRTCCLK) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeI2C) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeI2C) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeI2C) refers to main.o(.text.GPIOPinTypeI2C) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIOPinTypeI2CSCL) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeLCD) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeLCD) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeLCD) refers to main.o(.text.GPIOPinTypeLCD) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIOPinTypeOneWire) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypePWM) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypePWM) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypePWM) refers to main.o(.text.GPIOPinTypePWM) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeQEI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeQEI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeQEI) refers to main.o(.text.GPIOPinTypeQEI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeSSI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeSSI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeSSI) refers to main.o(.text.GPIOPinTypeSSI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeTimer) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeTimer) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeTimer) refers to main.o(.text.GPIOPinTypeTimer) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeTrace) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeTrace) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeTrace) refers to main.o(.text.GPIOPinTypeTrace) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUART) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUART) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUART) refers to main.o(.text.GPIOPinTypeUART) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIOPinTypeUSBAnalog) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIOPinTypeUSBDigital) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIOPinTypeWakeHigh) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIOPinTypeWakeLow) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinWakeStatus) refers to main.o(.text.GPIOPinWakeStatus) for [Anonymous Symbol]
    main.o(.text.GPIOPinConfigure) refers to main.o(.rodata.g_pui32GPIOBaseAddrs) for g_pui32GPIOBaseAddrs
    main.o(.ARM.exidx.text.GPIOPinConfigure) refers to main.o(.text.GPIOPinConfigure) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODMATriggerEnable) refers to main.o(.text.GPIODMATriggerEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODMATriggerDisable) refers to main.o(.text.GPIODMATriggerDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOADCTriggerEnable) refers to main.o(.text.GPIOADCTriggerEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOADCTriggerDisable) refers to main.o(.text.GPIOADCTriggerDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOUnlockPin) refers to main.o(.text.GPIOUnlockPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delayMs) refers to main.o(.text.delayMs) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.init) for init
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.S_jamming) for S_jamming
    main.o(.text.main) refers to main.o(.bss.S_lock) for S_lock
    main.o(.text.main) refers to main.o(.bss.S_driverup_handler) for S_driverup_handler
    main.o(.text.main) refers to main.o(.bss.S_driverdown_handler) for S_driverdown_handler
    main.o(.text.main) refers to main.o(.bss.S_passengerup_handler) for S_passengerup_handler
    main.o(.text.main) refers to main.o(.bss.S_passengerdown_handler) for S_passengerdown_handler
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.main) refers to main.o(.text.jamming) for jamming
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.lock) for lock
    main.o(.text.main) refers to main.o(.text.driverup_1_button) for driverup_1_button
    main.o(.text.main) refers to main.o(.text.driverdown_1_button) for driverdown_1_button
    main.o(.text.main) refers to main.o(.text.passengerup_1_button) for passengerup_1_button
    main.o(.text.main) refers to main.o(.text.passengerdown_1_button) for passengerdown_1_button
    main.o(.text.main) refers to main.o(.bss.xupQueue) for xupQueue
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.jamming) refers to main.o(.bss.S_jamming) for S_jamming
    main.o(.text.jamming) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.jamming) refers to main.o(.bss.xupQueue) for xupQueue
    main.o(.text.jamming) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.jamming) refers to main.o(.text.jamming) for [Anonymous Symbol]
    main.o(.text.lock) refers to main.o(.bss.S_lock) for S_lock
    main.o(.text.lock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.lock) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.lock) refers to main.o(.text.GPIOIntDisable) for GPIOIntDisable
    main.o(.text.lock) refers to main.o(.text.GPIOIntEnable) for GPIOIntEnable
    main.o(.ARM.exidx.text.lock) refers to main.o(.text.lock) for [Anonymous Symbol]
    main.o(.text.driverup_1_button) refers to main.o(.bss.S_driverup_handler) for S_driverup_handler
    main.o(.text.driverup_1_button) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.driverup_1_button) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.driverup_1_button) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.text.driverup_1_button) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.driverup_1_button) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.driverup_1_button) refers to main.o(.text.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.driverup_1_button) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.driverup_1_button) refers to main.o(.bss.xupQueue) for xupQueue
    main.o(.text.driverup_1_button) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.driverup_1_button) refers to main.o(.text.delayMs) for delayMs
    main.o(.ARM.exidx.text.driverup_1_button) refers to main.o(.text.driverup_1_button) for [Anonymous Symbol]
    main.o(.text.driverdown_1_button) refers to main.o(.bss.S_driverdown_handler) for S_driverdown_handler
    main.o(.text.driverdown_1_button) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.driverdown_1_button) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.driverdown_1_button) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.text.driverdown_1_button) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.driverdown_1_button) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.driverdown_1_button) refers to main.o(.text.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.driverdown_1_button) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.driverdown_1_button) refers to main.o(.text.driverdown_1_button) for [Anonymous Symbol]
    main.o(.text.passengerup_1_button) refers to main.o(.bss.S_passengerup_handler) for S_passengerup_handler
    main.o(.text.passengerup_1_button) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passengerup_1_button) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passengerup_1_button) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.text.passengerup_1_button) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.passengerup_1_button) refers to main.o(.text.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.passengerup_1_button) refers to main.o(.bss.xupQueue) for xupQueue
    main.o(.text.passengerup_1_button) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.passengerup_1_button) refers to main.o(.text.delayMs) for delayMs
    main.o(.ARM.exidx.text.passengerup_1_button) refers to main.o(.text.passengerup_1_button) for [Anonymous Symbol]
    main.o(.text.passengerdown_1_button) refers to main.o(.bss.S_passengerdown_handler) for S_passengerdown_handler
    main.o(.text.passengerdown_1_button) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passengerdown_1_button) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passengerdown_1_button) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.text.passengerdown_1_button) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.passengerdown_1_button) refers to main.o(.text.GPIOPinWrite) for GPIOPinWrite
    main.o(.ARM.exidx.text.passengerdown_1_button) refers to main.o(.text.passengerdown_1_button) for [Anonymous Symbol]
    main.o(.text.init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.init) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.init) refers to main.o(.text.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.init) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.init) refers to main.o(.text.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.init) refers to main.o(.text.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.init) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    main.o(.text.init) refers to main.o(.text.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.init) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.init) refers to main.o(.text.GPIOB_Handler) for GPIOB_Handler
    main.o(.text.init) refers to main.o(.text.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    main.o(.text.init) refers to main.o(.text.GPIOUnlockPin) for GPIOUnlockPin
    main.o(.ARM.exidx.text.init) refers to main.o(.text.init) for [Anonymous Symbol]
    main.o(.text.GPIOA_Handler) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.GPIOA_Handler) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOA_Handler) refers to main.o(.text.GPIOIntClear) for GPIOIntClear
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.S_driverup_handler) for S_driverup_handler
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.S_driverdown_handler) for S_driverdown_handler
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.flag_if_Driver_down) for flag_if_Driver_down
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.S_lock) for S_lock
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.S_jamming) for S_jamming
    main.o(.ARM.exidx.text.GPIOA_Handler) refers to main.o(.text.GPIOA_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOB_Handler) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.GPIOB_Handler) refers to main.o(.text.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOB_Handler) refers to main.o(.text.GPIOIntClear) for GPIOIntClear
    main.o(.text.GPIOB_Handler) refers to main.o(.bss.S_passengerup_handler) for S_passengerup_handler
    main.o(.text.GPIOB_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOB_Handler) refers to main.o(.bss.S_passengerdown_handler) for S_passengerdown_handler
    main.o(.ARM.exidx.text.GPIOB_Handler) refers to main.o(.text.GPIOB_Handler) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOB_Handler) for GPIOB_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.GPIODirModeSet), (8 bytes).
    Removing main.o(.text.GPIODirModeGet), (66 bytes).
    Removing main.o(.ARM.exidx.text.GPIODirModeGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntTypeSet), (8 bytes).
    Removing main.o(.text.GPIOIntTypeGet), (100 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntTypeGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPadConfigSet), (8 bytes).
    Removing main.o(.text.GPIOPadConfigGet), (384 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPadConfigGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntEnable), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntDisable), (8 bytes).
    Removing main.o(.text.GPIOIntStatus), (44 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntStatus), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntClear), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntRegister), (8 bytes).
    Removing main.o(.ARM.exidx.text._GPIOIntNumberGet), (8 bytes).
    Removing main.o(.text.GPIOIntUnregister), (30 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntUnregister), (8 bytes).
    Removing main.o(.text.GPIOIntRegisterPin), (44 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntRegisterPin), (8 bytes).
    Removing main.o(.text.GPIOIntUnregisterPin), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntUnregisterPin), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinRead), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinWrite), (8 bytes).
    Removing main.o(.text.GPIOPinTypeADC), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeADC), (8 bytes).
    Removing main.o(.text.GPIOPinTypeCAN), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeCAN), (8 bytes).
    Removing main.o(.text.GPIOPinTypeComparator), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeComparator), (8 bytes).
    Removing main.o(.text.GPIOPinTypeComparatorOutput), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput), (8 bytes).
    Removing main.o(.text.GPIOPinTypeDIVSCLK), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEPI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEPI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEthernetLED), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEthernetLED), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEthernetMII), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEthernetMII), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOInput), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput), (8 bytes).
    Removing main.o(.text.GPIOPinTypeGPIOOutputOD), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD), (8 bytes).
    Removing main.o(.text.GPIOPinTypeHibernateRTCCLK), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK), (8 bytes).
    Removing main.o(.text.GPIOPinTypeI2C), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeI2C), (8 bytes).
    Removing main.o(.text.GPIOPinTypeI2CSCL), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeI2CSCL), (8 bytes).
    Removing main.o(.text.GPIOPinTypeLCD), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeLCD), (8 bytes).
    Removing main.o(.text.GPIOPinTypeOneWire), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeOneWire), (8 bytes).
    Removing main.o(.text.GPIOPinTypePWM), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypePWM), (8 bytes).
    Removing main.o(.text.GPIOPinTypeQEI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeQEI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeSSI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeSSI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeTimer), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeTimer), (8 bytes).
    Removing main.o(.text.GPIOPinTypeTrace), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeTrace), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUART), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUART), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUSBAnalog), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUSBDigital), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUSBDigital), (8 bytes).
    Removing main.o(.text.GPIOPinTypeWakeHigh), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeWakeHigh), (8 bytes).
    Removing main.o(.text.GPIOPinTypeWakeLow), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeWakeLow), (8 bytes).
    Removing main.o(.text.GPIOPinWakeStatus), (14 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinWakeStatus), (8 bytes).
    Removing main.o(.text.GPIOPinConfigure), (108 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinConfigure), (8 bytes).
    Removing main.o(.text.GPIODMATriggerEnable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIODMATriggerEnable), (8 bytes).
    Removing main.o(.text.GPIODMATriggerDisable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIODMATriggerDisable), (8 bytes).
    Removing main.o(.text.GPIOADCTriggerEnable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIOADCTriggerEnable), (8 bytes).
    Removing main.o(.text.GPIOADCTriggerDisable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIOADCTriggerDisable), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOUnlockPin), (8 bytes).
    Removing main.o(.ARM.exidx.text.delayMs), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.jamming), (8 bytes).
    Removing main.o(.ARM.exidx.text.lock), (8 bytes).
    Removing main.o(.ARM.exidx.text.driverup_1_button), (8 bytes).
    Removing main.o(.ARM.exidx.text.driverdown_1_button), (8 bytes).
    Removing main.o(.ARM.exidx.text.passengerup_1_button), (8 bytes).
    Removing main.o(.ARM.exidx.text.passengerdown_1_button), (8 bytes).
    Removing main.o(.ARM.exidx.text.init), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOA_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOB_Handler), (8 bytes).
    Removing main.o(.rodata.g_pui32GPIOBaseAddrs), (144 bytes).
    Removing main.o(.bss.flag_if_Driver_up), (4 bytes).
    Removing main.o(.bss.flag_if_passenger_up), (4 bytes).
    Removing main.o(.bss.flag_if_passenger_down), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (356 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (554 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).
    Removing cpu.o(.emb_text), (38 bytes).

384 unused section(s) (total 17382 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000280   Section      252  startup_tm4c123.o(.text)
    .text                                    0x0000037c   Section        0  memcpya.o(.text)
    .text                                    0x000003a0   Section        0  memseta.o(.text)
    .text                                    0x000003c4   Section       48  init.o(.text)
    .text                                    0x000003f4   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x00000430   Section        0  main.o(.text.GPIOA_Handler)
    [Anonymous Symbol]                       0x000005b4   Section        0  main.o(.text.GPIOB_Handler)
    [Anonymous Symbol]                       0x00000690   Section        0  main.o(.text.GPIODirModeSet)
    [Anonymous Symbol]                       0x00000704   Section        0  main.o(.text.GPIOIntClear)
    [Anonymous Symbol]                       0x00000718   Section        0  main.o(.text.GPIOIntDisable)
    [Anonymous Symbol]                       0x00000730   Section        0  main.o(.text.GPIOIntEnable)
    [Anonymous Symbol]                       0x00000748   Section        0  main.o(.text.GPIOIntRegister)
    [Anonymous Symbol]                       0x0000076c   Section        0  main.o(.text.GPIOIntTypeSet)
    [Anonymous Symbol]                       0x00000844   Section        0  main.o(.text.GPIOPadConfigSet)
    [Anonymous Symbol]                       0x00000b80   Section        0  main.o(.text.GPIOPinRead)
    [Anonymous Symbol]                       0x00000b98   Section        0  main.o(.text.GPIOPinTypeGPIOInput)
    [Anonymous Symbol]                       0x00000bc0   Section        0  main.o(.text.GPIOPinTypeGPIOOutput)
    [Anonymous Symbol]                       0x00000bec   Section        0  main.o(.text.GPIOPinWrite)
    [Anonymous Symbol]                       0x00000c0c   Section        0  main.o(.text.GPIOUnlockPin)
    [Anonymous Symbol]                       0x00000c40   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000ca0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000cb0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000cd0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000cd4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000d10   Section        0  system_tm4c123.o(.text.SystemInit)
    _GPIOIntNumberGet                        0x00000e1d   Thumb Code   132  main.o(.text._GPIOIntNumberGet)
    [Anonymous Symbol]                       0x00000e1c   Section        0  main.o(.text._GPIOIntNumberGet)
    [Anonymous Symbol]                       0x00000ea0   Section        0  main.o(.text.delayMs)
    [Anonymous Symbol]                       0x00000ee0   Section        0  main.o(.text.driverdown_1_button)
    [Anonymous Symbol]                       0x00001048   Section        0  main.o(.text.driverup_1_button)
    [Anonymous Symbol]                       0x00001230   Section        0  main.o(.text.init)
    [Anonymous Symbol]                       0x000013a0   Section        0  main.o(.text.jamming)
    [Anonymous Symbol]                       0x000013e4   Section        0  main.o(.text.lock)
    [Anonymous Symbol]                       0x00001458   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x000015ec   Section        0  main.o(.text.passengerdown_1_button)
    [Anonymous Symbol]                       0x00001710   Section        0  main.o(.text.passengerup_1_button)
    prvAddCurrentTaskToDelayedList           0x000018b5   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000018b4   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000019d1   Thumb Code   334  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000019d0   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001b21   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001b20   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001b8d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001b8c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001be9   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001be8   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001c2d   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001c2c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001cf9   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001cf8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x00001d11   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x00001d10   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00001d39   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001d38   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x00001d79   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001d78   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00001db1   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00001db0   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x00001ddd   Thumb Code    68  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001ddc   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001e21   Thumb Code   278  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001e20   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001f39   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001f38   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x00001fc9   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00001fc8   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00002051   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00002050   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00002079   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00002078   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x000020a9   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x000020a8   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00002195   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002194   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x000021bd   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x000021bc   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00002211   Thumb Code   326  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00002210   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00002359   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00002358   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x000023f5   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x000023f4   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00002429   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002428   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00002465   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00002464   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x000024a9   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x000024a8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x000024fd   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000024fc   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00002549   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00002548   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00002569   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002568   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002634   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000026f4   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002720   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002780   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000027c8   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000027d4   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002804   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002814   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x00002881   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002880   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002894   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000028ec   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002938   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x0000295c   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000029a0   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x00002a24   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002a88   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002aac   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002abc   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002b00   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002b7c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002d00   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002db4   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002dc4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002dc4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002e84   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00003000   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003028   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000030c4   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x000031cc   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00003440   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x000035c4   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x000037a0   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000039b0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003a84   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003b24   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x00003c3c   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00003c74   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003c88   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003ee8   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00004020   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x0000417c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00004308   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x0000452c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.IntEnable                              0x00004598   Section        0  interrupt.o(i.IntEnable)
    i.IntPrioritySet                         0x000045fc   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00004624   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlPeripheralEnable                 0x00004658   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00004680   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.__scatterload_copy                     0x000046ac   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000046ba   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000046bc   Section       14  handlers.o(i.__scatterload_zeroinit)
    g_pui32Priority                          0x000046cc   Data          32  interrupt.o(.constdata)
    .constdata                               0x000046cc   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000046ec   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00004788   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x0000479c   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x000047b0   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x000047c4   Data          20  interrupt.o(.constdata)
    g_ppui32GPIOIntMapBlizzard               0x000047d8   Data         192  main.o(.rodata.g_ppui32GPIOIntMapBlizzard)
    [Anonymous Symbol]                       0x000047d8   Section        0  main.o(.rodata.g_ppui32GPIOIntMapBlizzard)
    g_ppui32GPIOIntMapSnowflake              0x00004898   Data         216  main.o(.rodata.g_ppui32GPIOIntMapSnowflake)
    [Anonymous Symbol]                       0x00004898   Section        0  main.o(.rodata.g_ppui32GPIOIntMapSnowflake)
    .L.str                                   0x00004970   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004970   Section        0  main.o(.rodata.str1.1)
    .L.str.5                                 0x00004978   Data          34  main.o(.rodata.str1.1)
    .L.str.3                                 0x0000499a   Data          31  main.o(.rodata.str1.1)
    .L.str.4                                 0x000049b9   Data          32  main.o(.rodata.str1.1)
    .L.str.2                                 0x000049d9   Data          29  main.o(.rodata.str1.1)
    .L.str.1                                 0x000049f6   Data          15  main.o(.rodata.str1.1)
    .L.str                                   0x00004a05   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004a05   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00004a0a   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004a0a   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    prvSampleTimeNow.xLastTime               0x20000690   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000690   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x20000694   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000694   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x20000698   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x2000069c   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x2000069c   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200006a0   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006a0   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006a4   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006a4   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200006a8   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200006a8   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200006ac   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006ac   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000710   Data       10000  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000710   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002e20   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002e20   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002e24   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002e24   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20002e28   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002e28   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002e2c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002e2c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002e30   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002e30   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002e34   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002e34   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002e38   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002e38   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002e3c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002e3c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002e50   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002e50   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002e64   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002e64   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002e78   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002e78   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x20002e8c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002e8c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextFreeByte                            0x20002e90   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20002e90   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x20002e94   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002e94   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002e98   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002e98   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20002e9c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002e9c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002ea0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002ea0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002eb4   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002eb4   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002eb8   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002eb8   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002ecc   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002ecc   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002ee0   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002ee0   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002ee4   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002ee4   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002ee8   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002ee8   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002eec   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002eec   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20002ef8   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000281   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000289   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000028b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000028d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000028f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000029f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x000002a5   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x0000037d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003a1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003af   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003af   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003af   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003b3   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x000003c5   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x000003c5   Thumb Code     0  init.o(.text)
    __decompress                             0x000003f5   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x000003f5   Thumb Code    58  __dczerorl.o(.text)
    GPIOA_Handler                            0x00000431   Thumb Code   386  main.o(.text.GPIOA_Handler)
    GPIOB_Handler                            0x000005b5   Thumb Code   218  main.o(.text.GPIOB_Handler)
    GPIODirModeSet                           0x00000691   Thumb Code   116  main.o(.text.GPIODirModeSet)
    GPIOIntClear                             0x00000705   Thumb Code    18  main.o(.text.GPIOIntClear)
    GPIOIntDisable                           0x00000719   Thumb Code    24  main.o(.text.GPIOIntDisable)
    GPIOIntEnable                            0x00000731   Thumb Code    24  main.o(.text.GPIOIntEnable)
    GPIOIntRegister                          0x00000749   Thumb Code    34  main.o(.text.GPIOIntRegister)
    GPIOIntTypeSet                           0x0000076d   Thumb Code   214  main.o(.text.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x00000845   Thumb Code   826  main.o(.text.GPIOPadConfigSet)
    GPIOPinRead                              0x00000b81   Thumb Code    22  main.o(.text.GPIOPinRead)
    GPIOPinTypeGPIOInput                     0x00000b99   Thumb Code    40  main.o(.text.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x00000bc1   Thumb Code    42  main.o(.text.GPIOPinTypeGPIOOutput)
    GPIOPinWrite                             0x00000bed   Thumb Code    30  main.o(.text.GPIOPinWrite)
    GPIOUnlockPin                            0x00000c0d   Thumb Code    42  main.o(.text.GPIOUnlockPin)
    PendSV_Handler                           0x00000c41   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000cb1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000cd5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000d11   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    delayMs                                  0x00000ea1   Thumb Code    62  main.o(.text.delayMs)
    driverdown_1_button                      0x00000ee1   Thumb Code   360  main.o(.text.driverdown_1_button)
    driverup_1_button                        0x00001049   Thumb Code   488  main.o(.text.driverup_1_button)
    init                                     0x00001231   Thumb Code   368  main.o(.text.init)
    jamming                                  0x000013a1   Thumb Code    68  main.o(.text.jamming)
    lock                                     0x000013e5   Thumb Code   114  main.o(.text.lock)
    main                                     0x00001459   Thumb Code   402  main.o(.text.main)
    passengerdown_1_button                   0x000015ed   Thumb Code   292  main.o(.text.passengerdown_1_button)
    passengerup_1_button                     0x00001711   Thumb Code   420  main.o(.text.passengerup_1_button)
    pvPortMalloc                             0x00002635   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x000026f5   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002721   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00002781   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000027c9   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x000027d5   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002805   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002815   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00002895   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000028ed   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002939   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x0000295d   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x000029a1   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x00002a25   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x00002a89   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002aad   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002abd   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002b01   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00002b7d   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002d01   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002db5   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002dc5   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002e85   Thumb Code   380  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00003001   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003029   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x000030c5   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x000031cd   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueGiveFromISR                        0x00003441   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x000035c5   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x000037a1   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000039b1   Thumb Code   210  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003a85   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x00003b25   Thumb Code   278  tasks.o(.text.xTaskDelayUntil)
    xTaskGetSchedulerState                   0x00003c3d   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00003c75   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003c89   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00003ee9   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00004021   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x0000417d   Thumb Code   396  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00004309   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x0000452d   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    IntEnable                                0x00004599   Thumb Code    92  interrupt.o(i.IntEnable)
    IntPrioritySet                           0x000045fd   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00004625   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlPeripheralEnable                   0x00004659   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00004681   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    __scatterload_copy                       0x000046ad   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000046bb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000046bd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    uxTopUsedPriority                        0x00004a14   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00004a18   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004a38   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    MotorMutex                               0x20000670   Data           4  main.o(.bss.MotorMutex)
    S_driverdown_handler                     0x20000674   Data           4  main.o(.bss.S_driverdown_handler)
    S_driverup_handler                       0x20000678   Data           4  main.o(.bss.S_driverup_handler)
    S_jamming                                0x2000067c   Data           4  main.o(.bss.S_jamming)
    S_lock                                   0x20000680   Data           4  main.o(.bss.S_lock)
    S_passengerdown_handler                  0x20000684   Data           4  main.o(.bss.S_passengerdown_handler)
    S_passengerup_handler                    0x20000688   Data           4  main.o(.bss.S_passengerup_handler)
    flag_if_Driver_down                      0x2000068c   Data           4  main.o(.bss.flag_if_Driver_down)
    pxCurrentTCB                             0x20000698   Data           4  tasks.o(.bss.pxCurrentTCB)
    xupQueue                                 0x20002ef0   Data           4  main.o(.bss.xupQueue)
    __initial_sp                             0x200030f8   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000281

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00005270, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00004c18])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004a38, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          149    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO         1016  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO         1025    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO         1028    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1030    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1032    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO         1033    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1035    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1037    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO         1026    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x000000fc   Code   RO          150  * .text               startup_tm4c123.o
    0x0000037c   0x0000037c   0x00000024   Code   RO         1019    .text               mc_w.l(memcpya.o)
    0x000003a0   0x000003a0   0x00000024   Code   RO         1021    .text               mc_w.l(memseta.o)
    0x000003c4   0x000003c4   0x00000030   Code   RO         1039    .text               mc_w.l(init.o)
    0x000003f4   0x000003f4   0x0000003a   Code   RO         1049    .text               mc_w.l(__dczerorl.o)
    0x0000042e   0x0000042e   0x00000002   PAD
    0x00000430   0x00000430   0x00000182   Code   RO          120    .text.GPIOA_Handler  main.o
    0x000005b2   0x000005b2   0x00000002   PAD
    0x000005b4   0x000005b4   0x000000da   Code   RO          122    .text.GPIOB_Handler  main.o
    0x0000068e   0x0000068e   0x00000002   PAD
    0x00000690   0x00000690   0x00000074   Code   RO            2    .text.GPIODirModeSet  main.o
    0x00000704   0x00000704   0x00000012   Code   RO           20    .text.GPIOIntClear  main.o
    0x00000716   0x00000716   0x00000002   PAD
    0x00000718   0x00000718   0x00000018   Code   RO           16    .text.GPIOIntDisable  main.o
    0x00000730   0x00000730   0x00000018   Code   RO           14    .text.GPIOIntEnable  main.o
    0x00000748   0x00000748   0x00000022   Code   RO           22    .text.GPIOIntRegister  main.o
    0x0000076a   0x0000076a   0x00000002   PAD
    0x0000076c   0x0000076c   0x000000d6   Code   RO            6    .text.GPIOIntTypeSet  main.o
    0x00000842   0x00000842   0x00000002   PAD
    0x00000844   0x00000844   0x0000033a   Code   RO           10    .text.GPIOPadConfigSet  main.o
    0x00000b7e   0x00000b7e   0x00000002   PAD
    0x00000b80   0x00000b80   0x00000016   Code   RO           32    .text.GPIOPinRead   main.o
    0x00000b96   0x00000b96   0x00000002   PAD
    0x00000b98   0x00000b98   0x00000028   Code   RO           52    .text.GPIOPinTypeGPIOInput  main.o
    0x00000bc0   0x00000bc0   0x0000002a   Code   RO           54    .text.GPIOPinTypeGPIOOutput  main.o
    0x00000bea   0x00000bea   0x00000002   PAD
    0x00000bec   0x00000bec   0x0000001e   Code   RO           34    .text.GPIOPinWrite  main.o
    0x00000c0a   0x00000c0a   0x00000002   PAD
    0x00000c0c   0x00000c0c   0x0000002a   Code   RO          100    .text.GPIOUnlockPin  main.o
    0x00000c36   0x00000c36   0x0000000a   PAD
    0x00000c40   0x00000c40   0x00000064   Code   RO          209    .text.PendSV_Handler  port.o
    0x00000ca4   0x00000ca4   0x0000000c   PAD
    0x00000cb0   0x00000cb0   0x00000024   Code   RO          193    .text.SVC_Handler   port.o
    0x00000cd4   0x00000cd4   0x0000003c   Code   RO          211    .text.SysTick_Handler  port.o
    0x00000d10   0x00000d10   0x0000010c   Code   RO          161    .text.SystemInit    system_tm4c123.o
    0x00000e1c   0x00000e1c   0x00000084   Code   RO           24    .text._GPIOIntNumberGet  main.o
    0x00000ea0   0x00000ea0   0x0000003e   Code   RO          102    .text.delayMs       main.o
    0x00000ede   0x00000ede   0x00000002   PAD
    0x00000ee0   0x00000ee0   0x00000168   Code   RO          112    .text.driverdown_1_button  main.o
    0x00001048   0x00001048   0x000001e8   Code   RO          110    .text.driverup_1_button  main.o
    0x00001230   0x00001230   0x00000170   Code   RO          118    .text.init          main.o
    0x000013a0   0x000013a0   0x00000044   Code   RO          106    .text.jamming       main.o
    0x000013e4   0x000013e4   0x00000072   Code   RO          108    .text.lock          main.o
    0x00001456   0x00001456   0x00000002   PAD
    0x00001458   0x00001458   0x00000192   Code   RO          104    .text.main          main.o
    0x000015ea   0x000015ea   0x00000002   PAD
    0x000015ec   0x000015ec   0x00000124   Code   RO          116    .text.passengerdown_1_button  main.o
    0x00001710   0x00001710   0x000001a4   Code   RO          114    .text.passengerup_1_button  main.o
    0x000018b4   0x000018b4   0x0000011a   Code   RO          336    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000019ce   0x000019ce   0x00000002   PAD
    0x000019d0   0x000019d0   0x0000014e   Code   RO          324    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001b1e   0x00001b1e   0x00000002   PAD
    0x00001b20   0x00001b20   0x0000006a   Code   RO          460    .text.prvCheckForValidListAndQueue  timers.o
    0x00001b8a   0x00001b8a   0x00000002   PAD
    0x00001b8c   0x00001b8c   0x0000005a   Code   RO          426    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001be6   0x00001be6   0x00000002   PAD
    0x00001be8   0x00001be8   0x00000042   Code   RO          277    .text.prvCopyDataFromQueue  queue.o
    0x00001c2a   0x00001c2a   0x00000002   PAD
    0x00001c2c   0x00001c2c   0x000000cc   Code   RO          263    .text.prvCopyDataToQueue  queue.o
    0x00001cf8   0x00001cf8   0x00000018   Code   RO          330    .text.prvDeleteTCB  tasks.o
    0x00001d10   0x00001d10   0x00000026   Code   RO          281    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00001d36   0x00001d36   0x00000002   PAD
    0x00001d38   0x00001d38   0x00000040   Code   RO          490    .text.prvGetNextExpireTime  timers.o
    0x00001d78   0x00001d78   0x00000038   Code   RO          362    .text.prvIdleTask   tasks.o
    0x00001db0   0x00001db0   0x0000002c   Code   RO          251    .text.prvInitialiseMutex  queue.o
    0x00001ddc   0x00001ddc   0x00000044   Code   RO          247    .text.prvInitialiseNewQueue  queue.o
    0x00001e20   0x00001e20   0x00000116   Code   RO          322    .text.prvInitialiseNewTask  tasks.o
    0x00001f36   0x00001f36   0x00000002   PAD
    0x00001f38   0x00001f38   0x0000008e   Code   RO          424    .text.prvInitialiseTaskLists  tasks.o
    0x00001fc6   0x00001fc6   0x00000002   PAD
    0x00001fc8   0x00001fc8   0x00000086   Code   RO          504    .text.prvInsertTimerInActiveList  timers.o
    0x0000204e   0x0000204e   0x00000002   PAD
    0x00002050   0x00002050   0x00000028   Code   RO          279    .text.prvIsQueueEmpty  queue.o
    0x00002078   0x00002078   0x0000002e   Code   RO          267    .text.prvIsQueueFull  queue.o
    0x000020a6   0x000020a6   0x00000002   PAD
    0x000020a8   0x000020a8   0x000000ec   Code   RO          265    .text.prvNotifyQueueSetContainer  queue.o
    0x00002194   0x00002194   0x00000028   Code   RO          201    .text.prvPortStartFirstTask  port.o
    0x000021bc   0x000021bc   0x00000054   Code   RO          498    .text.prvProcessExpiredTimer  timers.o
    0x00002210   0x00002210   0x00000146   Code   RO          494    .text.prvProcessReceivedCommands  timers.o
    0x00002356   0x00002356   0x00000002   PAD
    0x00002358   0x00002358   0x0000009a   Code   RO          492    .text.prvProcessTimerOrBlockTask  timers.o
    0x000023f2   0x000023f2   0x00000002   PAD
    0x000023f4   0x000023f4   0x00000034   Code   RO          502    .text.prvReloadTimer  timers.o
    0x00002428   0x00002428   0x0000003c   Code   RO          328    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00002464   0x00002464   0x00000044   Code   RO          496    .text.prvSampleTimeNow  timers.o
    0x000024a8   0x000024a8   0x00000052   Code   RO          500    .text.prvSwitchTimerLists  timers.o
    0x000024fa   0x000024fa   0x00000002   PAD
    0x000024fc   0x000024fc   0x0000004c   Code   RO          191    .text.prvTaskExitError  port.o
    0x00002548   0x00002548   0x0000001e   Code   RO          462    .text.prvTimerTask  timers.o
    0x00002566   0x00002566   0x00000002   PAD
    0x00002568   0x00002568   0x000000cc   Code   RO          269    .text.prvUnlockQueue  queue.o
    0x00002634   0x00002634   0x000000c0   Code   RO          225    .text.pvPortMalloc  heap_1.o
    0x000026f4   0x000026f4   0x0000002c   Code   RO          408    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002720   0x00002720   0x0000005e   Code   RO          189    .text.pxPortInitialiseStack  port.o
    0x0000277e   0x0000277e   0x00000002   PAD
    0x00002780   0x00002780   0x00000048   Code   RO          180    .text.uxListRemove  list.o
    0x000027c8   0x000027c8   0x0000000c   Code   RO          372    .text.uxTaskGetNumberOfTasks  tasks.o
    0x000027d4   0x000027d4   0x0000002e   Code   RO          172    .text.vListInitialise  list.o
    0x00002802   0x00002802   0x00000002   PAD
    0x00002804   0x00002804   0x0000000e   Code   RO          174    .text.vListInitialiseItem  list.o
    0x00002812   0x00002812   0x00000002   PAD
    0x00002814   0x00002814   0x0000006a   Code   RO          178    .text.vListInsert   list.o
    0x0000287e   0x0000287e   0x00000002   PAD
    0x00002880   0x00002880   0x00000014   Code   RO          199    .text.vPortEnableVFP  port.o
    0x00002894   0x00002894   0x00000056   Code   RO          205    .text.vPortEnterCritical  port.o
    0x000028ea   0x000028ea   0x00000002   PAD
    0x000028ec   0x000028ec   0x0000004a   Code   RO          207    .text.vPortExitCritical  port.o
    0x00002936   0x00002936   0x00000002   PAD
    0x00002938   0x00002938   0x00000024   Code   RO          227    .text.vPortFree     heap_1.o
    0x0000295c   0x0000295c   0x00000044   Code   RO          197    .text.vPortSetupTimerInterrupt  port.o
    0x000029a0   0x000029a0   0x00000084   Code   RO          213    .text.vPortValidateInterruptPriority  port.o
    0x00002a24   0x00002a24   0x00000064   Code   RO          301    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002a88   0x00002a88   0x00000024   Code   RO          390    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002aac   0x00002aac   0x0000000e   Code   RO          394    .text.vTaskMissedYield  tasks.o
    0x00002aba   0x00002aba   0x00000002   PAD
    0x00002abc   0x00002abc   0x00000042   Code   RO          378    .text.vTaskPlaceOnEventList  tasks.o
    0x00002afe   0x00002afe   0x00000002   PAD
    0x00002b00   0x00002b00   0x0000007c   Code   RO          382    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002b7c   0x00002b7c   0x00000182   Code   RO          404    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002cfe   0x00002cfe   0x00000002   PAD
    0x00002d00   0x00002d00   0x000000b2   Code   RO          360    .text.vTaskStartScheduler  tasks.o
    0x00002db2   0x00002db2   0x00000002   PAD
    0x00002db4   0x00002db4   0x00000010   Code   RO          334    .text.vTaskSuspendAll  tasks.o
    0x00002dc4   0x00002dc4   0x000000be   Code   RO          352    .text.vTaskSwitchContext  tasks.o
    0x00002e82   0x00002e82   0x00000002   PAD
    0x00002e84   0x00002e84   0x0000017c   Code   RO          195    .text.xPortStartScheduler  port.o
    0x00003000   0x00003000   0x00000026   Code   RO          249    .text.xQueueCreateMutex  queue.o
    0x00003026   0x00003026   0x00000002   PAD
    0x00003028   0x00003028   0x0000009a   Code   RO          245    .text.xQueueGenericCreate  queue.o
    0x000030c2   0x000030c2   0x00000002   PAD
    0x000030c4   0x000030c4   0x00000108   Code   RO          243    .text.xQueueGenericReset  queue.o
    0x000031cc   0x000031cc   0x00000274   Code   RO          255    .text.xQueueGenericSend  queue.o
    0x00003440   0x00003440   0x00000182   Code   RO          273    .text.xQueueGiveFromISR  queue.o
    0x000035c2   0x000035c2   0x00000002   PAD
    0x000035c4   0x000035c4   0x000001dc   Code   RO          275    .text.xQueueReceive  queue.o
    0x000037a0   0x000037a0   0x00000210   Code   RO          259    .text.xQueueSemaphoreTake  queue.o
    0x000039b0   0x000039b0   0x000000d2   Code   RO          392    .text.xTaskCheckForTimeOut  tasks.o
    0x00003a82   0x00003a82   0x00000002   PAD
    0x00003a84   0x00003a84   0x000000a0   Code   RO          320    .text.xTaskCreate   tasks.o
    0x00003b24   0x00003b24   0x00000116   Code   RO          332    .text.xTaskDelayUntil  tasks.o
    0x00003c3a   0x00003c3a   0x00000002   PAD
    0x00003c3c   0x00003c3c   0x00000038   Code   RO          398    .text.xTaskGetSchedulerState  tasks.o
    0x00003c74   0x00003c74   0x00000014   Code   RO          368    .text.xTaskGetTickCount  tasks.o
    0x00003c88   0x00003c88   0x00000260   Code   RO          366    .text.xTaskIncrementTick  tasks.o
    0x00003ee8   0x00003ee8   0x00000138   Code   RO          402    .text.xTaskPriorityDisinherit  tasks.o
    0x00004020   0x00004020   0x0000015c   Code   RO          400    .text.xTaskPriorityInherit  tasks.o
    0x0000417c   0x0000417c   0x0000018c   Code   RO          384    .text.xTaskRemoveFromEventList  tasks.o
    0x00004308   0x00004308   0x00000222   Code   RO          338    .text.xTaskResumeAll  tasks.o
    0x0000452a   0x0000452a   0x00000002   PAD
    0x0000452c   0x0000452c   0x0000006c   Code   RO          458    .text.xTimerCreateTimerTask  timers.o
    0x00004598   0x00004598   0x00000064   Code   RO          521    i.IntEnable         driverlib.lib(interrupt.o)
    0x000045fc   0x000045fc   0x00000028   Code   RO          532    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00004624   0x00004624   0x00000034   Code   RO          533    i.IntRegister       driverlib.lib(interrupt.o)
    0x00004658   0x00004658   0x00000028   Code   RO          689    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004680   0x00004680   0x0000002c   Code   RO          693    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x000046ac   0x000046ac   0x0000000e   Code   RO         1043    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000046ba   0x000046ba   0x00000002   Code   RO         1044    i.__scatterload_null  mc_w.l(handlers.o)
    0x000046bc   0x000046bc   0x0000000e   Code   RO         1045    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000046ca   0x000046ca   0x00000002   PAD
    0x000046cc   0x000046cc   0x0000010c   Data   RO          537    .constdata          driverlib.lib(interrupt.o)
    0x000047d8   0x000047d8   0x000000c0   Data   RO          138    .rodata.g_ppui32GPIOIntMapBlizzard  main.o
    0x00004898   0x00004898   0x000000d8   Data   RO          139    .rodata.g_ppui32GPIOIntMapSnowflake  main.o
    0x00004970   0x00004970   0x00000095   Data   RO          132    .rodata.str1.1      main.o
    0x00004a05   0x00004a05   0x00000005   Data   RO          444    .rodata.str1.1      tasks.o
    0x00004a0a   0x00004a0a   0x00000008   Data   RO          507    .rodata.str1.1      timers.o
    0x00004a12   0x00004a12   0x00000002   PAD
    0x00004a14   0x00004a14   0x00000004   Data   RO          429    .rodata.uxTopUsedPriority  tasks.o
    0x00004a18   0x00004a18   0x00000020   Data   RO         1042    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00004c00, Size: 0x000030f8, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          163    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW          217    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          538    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000004   Zero   RW          131    .bss.MotorMutex     main.o
    0x20000674        -       0x00000004   Zero   RW          128    .bss.S_driverdown_handler  main.o
    0x20000678        -       0x00000004   Zero   RW          127    .bss.S_driverup_handler  main.o
    0x2000067c        -       0x00000004   Zero   RW          125    .bss.S_jamming      main.o
    0x20000680        -       0x00000004   Zero   RW          126    .bss.S_lock         main.o
    0x20000684        -       0x00000004   Zero   RW          130    .bss.S_passengerdown_handler  main.o
    0x20000688        -       0x00000004   Zero   RW          129    .bss.S_passengerup_handler  main.o
    0x2000068c        -       0x00000004   Zero   RW          134    .bss.flag_if_Driver_down  main.o
    0x20000690        -       0x00000004   Zero   RW          511    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000694        -       0x00000004   Zero   RW          233    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x20000698        -       0x00000004   Zero   RW          428    .bss.pxCurrentTCB   tasks.o
    0x2000069c        -       0x00000004   Zero   RW          509    .bss.pxCurrentTimerList  timers.o
    0x200006a0        -       0x00000004   Zero   RW          439    .bss.pxDelayedTaskList  tasks.o
    0x200006a4        -       0x00000004   Zero   RW          440    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006a8        -       0x00000004   Zero   RW          510    .bss.pxOverflowTimerList  timers.o
    0x200006ac        -       0x00000064   Zero   RW          430    .bss.pxReadyTasksLists  tasks.o
    0x20000710        -       0x00002710   Zero   RW          234    .bss.ucHeap         heap_1.o
    0x20002e20        -       0x00000001   Zero   RW          215    .bss.ucMaxSysCallPriority  port.o
    0x20002e21   COMPRESSED   0x00000003   PAD
    0x20002e24        -       0x00000004   Zero   RW          216    .bss.ulMaxPRIGROUPValue  port.o
    0x20002e28        -       0x00000004   Zero   RW          435    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002e2c        -       0x00000004   Zero   RW          434    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002e30        -       0x00000004   Zero   RW          437    .bss.uxSchedulerSuspended  tasks.o
    0x20002e34        -       0x00000004   Zero   RW          432    .bss.uxTaskNumber   tasks.o
    0x20002e38        -       0x00000004   Zero   RW          431    .bss.uxTopReadyPriority  tasks.o
    0x20002e3c        -       0x00000014   Zero   RW          512    .bss.xActiveTimerList1  timers.o
    0x20002e50        -       0x00000014   Zero   RW          513    .bss.xActiveTimerList2  timers.o
    0x20002e64        -       0x00000014   Zero   RW          449    .bss.xDelayedTaskList1  tasks.o
    0x20002e78        -       0x00000014   Zero   RW          450    .bss.xDelayedTaskList2  tasks.o
    0x20002e8c        -       0x00000004   Zero   RW          445    .bss.xIdleTaskHandle  tasks.o
    0x20002e90        -       0x00000004   Zero   RW          235    .bss.xNextFreeByte  heap_1.o
    0x20002e94        -       0x00000004   Zero   RW          446    .bss.xNextTaskUnblockTime  tasks.o
    0x20002e98        -       0x00000004   Zero   RW          448    .bss.xNumOfOverflows  tasks.o
    0x20002e9c        -       0x00000004   Zero   RW          447    .bss.xPendedTicks   tasks.o
    0x20002ea0        -       0x00000014   Zero   RW          443    .bss.xPendingReadyList  tasks.o
    0x20002eb4        -       0x00000004   Zero   RW          436    .bss.xSchedulerRunning  tasks.o
    0x20002eb8        -       0x00000014   Zero   RW          441    .bss.xSuspendedTaskList  tasks.o
    0x20002ecc        -       0x00000014   Zero   RW          433    .bss.xTasksWaitingTermination  tasks.o
    0x20002ee0        -       0x00000004   Zero   RW          438    .bss.xTickCount     tasks.o
    0x20002ee4        -       0x00000004   Zero   RW          506    .bss.xTimerQueue    timers.o
    0x20002ee8        -       0x00000004   Zero   RW          508    .bss.xTimerTaskHandle  timers.o
    0x20002eec        -       0x00000004   Zero   RW          442    .bss.xYieldPending  tasks.o
    0x20002ef0        -       0x00000004   Zero   RW          133    .bss.xupQueue       main.o
    0x20002ef4   COMPRESSED   0x00000004   PAD
    0x20002ef8        -       0x00000200   Zero   RW          147    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       228          0          0          0      10008       1764   heap_1.o
       238          0          0          0          0       2352   list.o
      4742          0        557          0         36      13975   main.o
      1166         16          0          4          5       3995   port.o
      3520          0          0          0          0      16114   queue.o
       252         10        620          0        512       5488   startup_tm4c123.o
       268          0          0          4          0       6820   system_tm4c123.o
      5266          0          9          0        260      22269   tasks.o
      1208         10          8          0         60       8440   timers.o

    ----------------------------------------------------------------------
     16996         48       1228       1024      10888      81217   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       108         12          2       1016          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       192         20        268        620          0       7171   interrupt.o
        84          8          0          0          0       1021   sysctl.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o

    ----------------------------------------------------------------------
       508         46        268        620          4       8436   Library Totals
         4          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       276         28        268        620          0       8192   driverlib.lib
       228         18          0          0          0        244   mc_w.l

    ----------------------------------------------------------------------
       508         46        268        620          4       8436   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17504         94       1496       1644      10892      89545   Grand Totals
     17504         94       1496         24      10892      89545   ELF Image Totals (compressed)
     17504         94       1496         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19000 (  18.55kB)
    Total RW  Size (RW Data + ZI Data)             12536 (  12.24kB)
    Total ROM Size (Code + RO Data + RW Data)      19024 (  18.58kB)

==============================================================================

